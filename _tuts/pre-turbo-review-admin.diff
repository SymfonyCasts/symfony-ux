diff --git a/src/Controller/ReviewAdminController.php b/src/Controller/ReviewAdminController.php
new file mode 100644
index 0000000..fb60f56
--- /dev/null
+++ b/src/Controller/ReviewAdminController.php
@@ -0,0 +1,84 @@
+<?php
+
+namespace App\Controller;
+
+use App\Entity\Review;
+use App\Form\ReviewType;
+use App\Repository\ReviewRepository;
+use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
+use Symfony\Component\HttpFoundation\Request;
+use Symfony\Component\HttpFoundation\Response;
+use Symfony\Component\Routing\Annotation\Route;
+
+/**
+ * @Route("/admin/review")
+ */
+class ReviewAdminController extends AbstractController
+{
+    /**
+     * @Route("/", name="review_admin_index", methods={"GET"})
+     */
+    public function index(ReviewRepository $reviewRepository): Response
+    {
+        return $this->render('review_admin/index.html.twig', [
+            'reviews' => $reviewRepository->findBy([], ['id' => 'DESC']),
+        ]);
+    }
+
+    /**
+     * @Route("/new", name="review_admin_new", methods={"GET","POST"})
+     */
+    public function new(Request $request): Response
+    {
+        $review = new Review();
+        $form = $this->createForm(ReviewType::class, $review);
+        $form->handleRequest($request);
+
+        if ($form->isSubmitted() && $form->isValid()) {
+            $entityManager = $this->getDoctrine()->getManager();
+            $entityManager->persist($review);
+            $entityManager->flush();
+
+            return $this->redirectToRoute('review_admin_index');
+        }
+
+        return $this->render('review_admin/new.html.twig', [
+            'review' => $review,
+            'form' => $form->createView(),
+        ]);
+    }
+
+    /**
+     * @Route("/{id}/edit", name="review_admin_edit", methods={"GET","POST"})
+     */
+    public function edit(Request $request, Review $review): Response
+    {
+        $form = $this->createForm(ReviewType::class, $review);
+        $form->handleRequest($request);
+
+        if ($form->isSubmitted() && $form->isValid()) {
+            $this->getDoctrine()->getManager()->flush();
+
+            return $this->redirectToRoute('review_admin_index');
+        }
+
+        return $this->render('review_admin/edit.html.twig', [
+            'review' => $review,
+            'form' => $form->createView(),
+        ]);
+    }
+
+    /**
+     * @Route("/{id}", name="review_admin_delete", methods={"POST"})
+     */
+    public function delete(Request $request, Review $review): Response
+    {
+        if ($this->isCsrfTokenValid('delete'.$review->getId(), $request->request->get('_token'))) {
+            $entityManager = $this->getDoctrine()->getManager();
+            $entityManager->remove($review);
+            $entityManager->flush();
+        }
+
+        return $this->redirectToRoute('review_admin_index');
+    }
+}
diff --git a/src/Form/ReviewType.php b/src/Form/ReviewType.php
new file mode 100644
index 0000000..b6457d0
--- /dev/null
+++ b/src/Form/ReviewType.php
@@ -0,0 +1,28 @@
+<?php
+
+namespace App\Form;
+
+use App\Entity\Review;
+use Symfony\Component\Form\AbstractType;
+use Symfony\Component\Form\FormBuilderInterface;
+use Symfony\Component\OptionsResolver\OptionsResolver;
+
+class ReviewType extends AbstractType
+{
+    public function buildForm(FormBuilderInterface $builder, array $options)
+    {
+        $builder
+            ->add('content')
+            ->add('stars')
+            ->add('owner')
+            ->add('product')
+        ;
+    }
+
+    public function configureOptions(OptionsResolver $resolver)
+    {
+        $resolver->setDefaults([
+            'data_class' => Review::class,
+        ]);
+    }
+}
diff --git a/templates/review_admin/_delete_form.html.twig b/templates/review_admin/_delete_form.html.twig
new file mode 100644
index 0000000..38b1513
--- /dev/null
+++ b/templates/review_admin/_delete_form.html.twig
@@ -0,0 +1,4 @@
+<form method="post" action="{{ path('review_admin_delete', {'id': review.id}) }}" onsubmit="return confirm('Are you sure you want to delete this item?');">
+    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ review.id) }}">
+    <button class="btn">Delete</button>
+</form>
diff --git a/templates/review_admin/_form.html.twig b/templates/review_admin/_form.html.twig
new file mode 100644
index 0000000..9328bd5
--- /dev/null
+++ b/templates/review_admin/_form.html.twig
@@ -0,0 +1,4 @@
+{{ form_start(form) }}
+    {{ form_widget(form) }}
+    <button class="btn btn-primary">{{ button_label|default('Save') }}</button>
+{{ form_end(form) }}
diff --git a/templates/review_admin/edit.html.twig b/templates/review_admin/edit.html.twig
new file mode 100644
index 0000000..14d4b42
--- /dev/null
+++ b/templates/review_admin/edit.html.twig
@@ -0,0 +1,15 @@
+{% extends 'base.html.twig' %}
+
+{% block title %}Edit Review{% endblock %}
+
+{% block body %}
+<div class="container-fluid mt-4">
+    <h1>Edit Review</h1>
+
+    {{ include('review_admin/_form.html.twig', {'button_label': 'Update'}) }}
+
+    <a href="{{ path('review_admin_index') }}">back to list</a>
+
+    {{ include('review_admin/_delete_form.html.twig') }}
+</div>
+{% endblock %}
diff --git a/templates/review_admin/index.html.twig b/templates/review_admin/index.html.twig
new file mode 100644
index 0000000..67640e2
--- /dev/null
+++ b/templates/review_admin/index.html.twig
@@ -0,0 +1,38 @@
+{% extends 'base.html.twig' %}
+
+{% block title %}Review index{% endblock %}
+
+{% block body %}
+<div class="container-fluid mt-4">
+    <h1>Review index</h1>
+
+    <table class="table">
+        <thead>
+            <tr>
+                <th>Comment</th>
+                <th>Product</th>
+                <th>Stars</th>
+                <th>actions</th>
+            </tr>
+        </thead>
+        <tbody>
+        {% for review in reviews %}
+            <tr>
+                <td>{{ review.contentPreview }}</td>
+                <td>{{ review.product.name }}</td>
+                <td>{{ review.stars }}</td>
+                <td>
+                    <a href="{{ path('review_admin_edit', {'id': review.id}) }}">edit</a>
+                </td>
+            </tr>
+        {% else %}
+            <tr>
+                <td colspan="4">no records found</td>
+            </tr>
+        {% endfor %}
+        </tbody>
+    </table>
+
+    <a href="{{ path('review_admin_new') }}">Create new</a>
+</div>
+{% endblock %}
diff --git a/templates/review_admin/new.html.twig b/templates/review_admin/new.html.twig
new file mode 100644
index 0000000..2d4426c
--- /dev/null
+++ b/templates/review_admin/new.html.twig
@@ -0,0 +1,13 @@
+{% extends 'base.html.twig' %}
+
+{% block title %}New Review{% endblock %}
+
+{% block body %}
+<div class="container-fluid mt-4">
+    <h1>Create new Review</h1>
+
+    {{ include('review_admin/_form.html.twig') }}
+
+    <a href="{{ path('review_admin_index') }}">back to list</a>
+</div>
+{% endblock %}
